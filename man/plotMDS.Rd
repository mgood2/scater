% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/plotting.R
\docType{methods}
\name{plotMDS}
\alias{plotMDS}
\alias{plotMDS}
\alias{plotMDSSCESet}
\alias{plotMDS,SCESet-method}
\alias{plotMDS,SCESet-method}
\alias{plotMDS}
\title{Produce a multidimensional scaling plot for an SCESet object}
\usage{
plotMDS(object, ...)

plotMDSSCESet(object, ncomponents = 2, colour_by = NULL, shape_by = NULL,
  size_by = NULL, return_SCESet = FALSE, draw_plot = TRUE,
  exprs_values = "exprs", theme_size = 10, legend = "auto")

\S4method{plotMDS}{SCESet}(object, ncomponents = 2, colour_by = NULL,
  shape_by = NULL, size_by = NULL, return_SCESet = FALSE,
  draw_plot = TRUE, exprs_values = "exprs", theme_size = 10,
  legend = "auto")
}
\arguments{
\item{object}{an \code{SCESet} object}

\item{...}{arguments passed to S4 plotMDS method}

\item{ncomponents}{numeric scalar indicating the number of principal
components to plot, starting from the first principal component. Default is
2. If \code{ncomponents} is 2, then a scatterplot of PC2 vs PC1 is produced.
If \code{ncomponents} is greater than 2, a pairs plots for the top components
is produced. NB: computing more than two components for t-SNE can become very
time consuming.}

\item{colour_by}{character string defining the column of \code{pData(object)} to
be used as a factor by which to colour the points in the plot. Alternatively, a 
data frame with one column containing values to map to colours for all cells.}

\item{shape_by}{character string defining the column of \code{pData(object)} to
be used as a factor by which to define the shape of the points in the plot.}

\item{size_by}{character string defining the column of \code{pData(object)} to
be used as a factor by which to define the size of points in the plot.}

\item{return_SCESet}{logical, should the function return an \code{SCESet}
object with principal component values for cells in the
\code{reducedDimension} slot. Default is \code{FALSE}, in which case a
\code{ggplot} object is returned.}

\item{draw_plot}{logical, should the plot be drawn on the current graphics
device? Only used if \code{return_SCESet} is \code{TRUE}, otherwise the plot
is always produced.}

\item{exprs_values}{a string specifying the expression values to use for
colouring the points, if \code{colour_by} or \code{size_by} are set as feature names.}

\item{theme_size}{numeric scalar giving default font size for plotting theme
(default is 10).}

\item{legend}{character, specifying how the legend(s) be shown? Default is
\code{"auto"}, which hides legends that have only one level and shows others.
Alternatives are "all" (show all legends) or "none" (hide all legends).}
}
\value{
If \code{return_SCESet} is \code{TRUE}, then the function returns an
\code{SCESet} object, otherwise it returns a \code{ggplot} object.
}
\description{
#' Produce an MDS plot from the cell pairwise distance data in an
\code{SCESet} dataset.
}
\details{
The function \code{\link{cmdscale}} is used internally to
compute the multidimensional scaling components to plot.
}
\examples{
## Set up an example SCESet
data("sc_example_counts")
data("sc_example_cell_info")
pd <- new("AnnotatedDataFrame", data = sc_example_cell_info)
example_sceset <- newSCESet(countData = sc_example_counts, phenoData = pd)
drop_genes <- apply(exprs(example_sceset), 1, function(x) {var(x) == 0})
example_sceset <- example_sceset[!drop_genes, ]
example_sceset <- calculateQCMetrics(example_sceset)

## define cell-cell distances
cellDist(example_sceset) <- as.matrix(dist(t(exprs(example_sceset))))

## Examples plotting
plotMDS(example_sceset)
plotMDS(example_sceset, colour_by = "Cell_Cycle")
plotMDS(example_sceset, colour_by = "Cell_Cycle",
shape_by = "Treatment")

## define cell-cell distances differently
cellDist(example_sceset) <- as.matrix(dist(t(counts(example_sceset)),
method = "canberra"))
plotMDS(example_sceset, colour_by = "Cell_Cycle",
shape_by = "Treatment", size_by = "Mutation_Status")

}
