% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc.R
\name{plotHighestExprs}
\alias{plotHighestExprs}
\title{Plot the features with the highest expression values}
\usage{
plotHighestExprs(object, col_by_variable = "total_features", n = 50,
  drop_features = NULL, exprs_values = "counts")
}
\arguments{
\item{object}{an SCESet object containing expression values and
experimental information. Must have been appropriately prepared.}

\item{col_by_variable}{variable name (must be a column name of pData(object))
to be used to assign colours to cell-level values.}

\item{n}{numeric scalar giving the number of the most expressed features to
show. Default value is 50.}

\item{drop_features}{a character, logical or numeric vector indicating which
features (e.g. genes, transcripts) to drop when producing the plot. For
example, control genes might be dropped to focus attention on contribution
from endogenous rather than synthetic genes.}

\item{exprs_values}{which slot of the \code{assayData} in the \code{object}
should be used to define expression? Valid options are "counts" (default),
"tpm", "fpkm" and "exprs".}
}
\value{
a ggplot plot object
}
\description{
Plot the features with the highest expression values
}
\details{
Plot the percentage of counts accounted for by the top n most highly
expressed features across the dataset.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
pd <- new("AnnotatedDataFrame", data = sc_example_cell_info)
rownames(pd) <- pd$Cell
example_sceset <- newSCESet(countData = sc_example_counts, phenoData = pd)
example_sceset <- calculateQCMetrics(example_sceset, feature_controls = 1:500)
plotHighestExprs(example_sceset, col_by_variable="total_features")
plotHighestExprs(example_sceset, col_by_variable="Mutation_Status")

}

