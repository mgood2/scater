% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SCESet-methods.R
\name{getExprs}
\alias{getExprs}
\title{Retrieve a representation of gene expression}
\usage{
getExprs(object)
}
\arguments{
\item{object}{An object of type \code{SCESet}}
}
\value{
A matrix representation of expression corresponding to \code{object@useForExprs}.
}
\description{
Gene expression can be summarised in a variety of ways, e.g. as TPM, FPKM or
as raw counts. Many internal methods and external packages rely on accessing
a generic representation of expression without worrying about the particulars.
Scater allows the user to set \code{object@useForExprs} to the preferred
type (either "exprs", "TPM", "fpkm" or "counts") and that particular representation
will be returned by calls to \code{getExprs}. Note if such representation is
not defined, this method returns \code{NULL}.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
pd <- new("AnnotatedDataFrame", data = sc_example_cell_info)
example_sceset <- newSCESet(countData = sc_example_counts, phenoData = pd, useForExprs = "exprs")
all(exprs(example_sceset) == getExprs(example_sceset)) # TRUE
example_sceset <- newSCESet(countData = sc_example_counts, phenoData = pd, useForExprs = "counts")
all(exprs(example_sceset) == getExprs(example_sceset)) # FALSE
all(counts(example_sceset) == getExprs(example_sceset)) # TRUE
}

