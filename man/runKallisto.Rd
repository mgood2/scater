% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kallisto-wrapper.R
\name{runKallisto}
\alias{runKallisto}
\title{Run kallisto on FASTQ files to quantify feature abundance}
\usage{
runKallisto(targets_file, transcript_index, single_end = TRUE,
  output_prefix = "output", fragment_length = NULL,
  fragment_standard_deviation = NULL, n_cores = 2,
  n_bootstrap_samples = 0, bootstrap_seed = NULL, correct_bias = TRUE,
  plaintext = FALSE, kallisto_version = "current", verbose = TRUE,
  dry_run = FALSE, kallisto_cmd = "kallisto")
}
\arguments{
\item{targets_file}{character string giving the path to a tab-delimited text
file with either 2 columns (single-end reads) or 3 columns (paired-end reads)
that gives the sample names (first column) and FastQ file names (column 2 and
if applicable 3). The file is assumed to have column headers, although these
are not used.}

\item{transcript_index}{character string giving the path to the kallisto
index to be used for the feature abundance quantification.}

\item{single_end}{logical, are single-end reads used, or paired-end reads?}

\item{output_prefix}{character string giving the prefix for the output folder
that will contain the kallisto results. The default is \code{"output"} and
the sample name (column 1 of \code{targets_file}) is appended (preceded by an
underscore).}

\item{fragment_length}{scalar integer or numeric giving the estimated
average fragment length. Required argument if \code{single_end} is \code{TRUE},
optional if \code{FALSE} (kallisto default for paired-end data is that the
value is estimated from the input data).}

\item{fragment_standard_deviation}{scalar numeric giving the estimated 
standard deviation of read fragment length. Required argument if 
\code{single_end} is \code{TRUE}, optional if \code{FALSE} (kallisto default 
for paired-end data is that the value is estimated from the input data).}

\item{n_cores}{integer giving the number of cores (nodes/threads) to use for
the kallisto jobs. The package \code{parallel} is used. Default is 2 cores.}

\item{n_bootstrap_samples}{integer giving the number of bootstrap samples
that kallisto should use (default is 0). With bootstrap samples, uncertainty
in abundance can be quantified.}

\item{bootstrap_seed}{scalar integer or numeric giving the seed to use for
the bootstrap sampling (default used by kallisto is 42). Optional argument.}

\item{correct_bias}{logical, should kallisto's option to model and correct
abundances for sequence specific bias? Requires kallisto version 0.42.2 or
higher.}

\item{plaintext}{logical, if \code{TRUE} then bootstrapping results are
returned in a plain text file rather than an HDF5
\url{https://www.hdfgroup.org/HDF5/} file.}

\item{kallisto_version}{character string indicating whether or not the
version of kallisto to be used is \code{"pre-0.42.2"} or \code{"current"}.
This is required because the kallisto developers changed the output file
extensions and added features in version 0.42.2.}

\item{verbose}{logical, should timings for the run be printed?}

\item{dry_run}{logical, if \code{TRUE} then a list containing the kallisto
commands that would be run and the output directories is returned. Can be
used to read in results if kallisto is run outside an R session or to produce
 a script to run outside of an R session.}

\item{kallisto_cmd}{(optional) string giving full command to use to call
kallisto, if simply typing "kallisto" at the command line does not give the
required version of kallisto or does not work. Default is simply "kalliso".
If used, this argument should give the full path to the desired kallisto
binary.}
}
\value{
A list containing three elements for each sample for which feature
abundance has been quantified: (1) \code{kallisto_call}, the call used for
kallisto, (2) \code{kallisto_log} the log generated by kallisto, and (3)
\code{output_dir} the directory in which the kallisto results can be found.
}
\description{
Run the abundance quantification tool \code{kallisto} on a set of FASTQ
files. Requires \code{kallisto} (\url{http://pachterlab.github.io/kallisto/})
to be installed and a kallisto feature index must have been generated prior
to using this function. See the kallisto website for installation and basic
usage instructions.
}
\details{
A kallisto transcript index can be built from a FASTA file:
\code{kallisto index [arguments] FASTA-file}. See the kallisto documentation
for further details.
}
\examples{
\dontrun{
## If in kallisto's 'test' directory, then try these calls:
## Generate 'targets.txt' file:
write.table(data.frame(Sample="sample1", File1="reads_1.fastq.gz", File2="reads_1.fastq.gz"),
 file="targets.txt", quote=FALSE, row.names=FALSE, sep="\\t")
kallisto_log <- runKallisto("targets.txt", "transcripts.idx", single_end=FALSE,
         output_prefix="output", verbose=TRUE, n_bootstrap_samples=10,
         dry_run = FALSE)
}
}
