% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/SCESet-methods.R
\docType{methods}
\name{is_exprs}
\alias{is_exprs}
\alias{is_exprs<-}
\alias{is_exprs}
\alias{is_exprs.SCESet}
\alias{is_exprs,SCESet-method}
\alias{is_exprs<-,SCESet,matrix-method}
\alias{is_exprs,SCESet-method}
\alias{is_exprs<-}
\title{Accessors for the 'is_exprs' element of an SCESet object.}
\usage{
is_exprs(object)

is_exprs(object) <- value

\S4method{is_exprs}{SCESet}(object)

\S4method{is_exprs}{SCESet,matrix}(object)<-value

\S4method{is_exprs}{SCESet}(object)

\S4method{is_exprs}{SCESet,matrix}(object) <- value
}
\arguments{
\item{object}{a \code{SCESet} object.}

\item{value}{an integer matrix}
}
\value{
a logical matrix indicating if observations are "expressed" or not
}
\description{
The is_exprs element holds a logical matrix indicating whether or not each
observation is above the defined lowerDetectionLimit in the SCESet object. It
has the same dimensions as the 'exprs' and 'counts' elements, which hold the
transformed expression data and count data, respectively.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sceset <- newSCESet(countData = sc_example_counts)
is_exprs(example_sceset)

}
\author{
Davis McCarthy
}
