% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/SCESet-methods.R
\docType{methods}
\name{get_exprs}
\alias{get_exprs}
\alias{get_exprs}
\alias{get_exprs.SCESet}
\alias{get_exprs,SCESet-method}
\alias{get_exprs,SCESet-method}
\title{Generic accessor for expression data from an SCESet object.}
\usage{
get_exprs(object, exprs_values, ...)

\S4method{get_exprs}{SCESet}(object, exprs_values, warning = TRUE)

\S4method{get_exprs}{SCESet}(object, exprs_values = "exprs", warning = TRUE)
}
\arguments{
\item{object}{a \code{SCESet} object.}

\item{exprs_values}{character string indicating which values should be used
as the expression values for this plot. Valid arguments are \code{"tpm"}
(transcripts per million), \code{"norm_tpm"} (normalised TPM
values), \code{"fpkm"} (FPKM values), \code{"norm_fpkm"} (normalised FPKM
values), \code{"counts"} (counts for each feature), \code{"norm_counts"},
\code{"cpm"} (counts-per-million), \code{"norm_cpm"} (normalised
counts-per-million), \code{"exprs"} (whatever is in the \code{'exprs'} slot
of the \code{SCESet} object; default), \code{"norm_exprs"} (normalised
expression values) or \code{"stand_exprs"} (standardised expression values)
or any other slots that have been added to the \code{"assayData"} slot by
the user.}

\item{...}{further arguments passed to \code{get_exprs.SCESet}}

\item{warning}{a logical scalar specifying whether a warning should be
raised, and \code{NULL} returned, if the requested expression values are
not present in \code{object}. Otherwise, an error will be thrown.}
}
\value{
a matrix of expression values
}
\description{
Access by name a matrix of expression values, one row for each feature (gene,
exon, region, etc), and one column for each cell stored an element of the
assayData slot of the SCESet object.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
example_sceset <- newSCESet(countData = sc_example_counts)
get_exprs(example_sceset, "counts")

## new slots can be defined and accessed
set_exprs(example_sceset, "scaled_counts") <- t(t(counts(example_sceset)) /
colSums(counts(example_sceset)))
get_exprs(example_sceset, "scaled_counts")[1:6, 1:6]

}
\author{
Davis McCarthy
}
