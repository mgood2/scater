% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate-expression.R
\name{nexprs}
\alias{nexprs}
\title{Count the number of expressed genes per cell}
\usage{
nexprs(object, lowerDetectionLimit = NULL, exprs_values = NULL,
  byrow = FALSE, subset_row = NULL, subset_col = NULL)
}
\arguments{
\item{object}{an \code{SCESet} object}

\item{lowerDetectionLimit}{numeric scalar providing the value above which observations
are deemed to be expressed. Defaults to \code{object@lowerDetectionLimit}.}

\item{exprs_values}{character scalar indicating whether the count data
(\code{"counts"}), the transformed expression data (\code{"exprs"}),
transcript-per-million (\code{"tpm"}), counts-per-million (\code{"cpm"}) or
FPKM (\code{"fpkm"}) should be used to define if an observation is expressed
or not. Defaults to the first available value of those options in the
order shown. However, if \code{is_exprs(object)} is present, it will be
used directly; \code{exprs_values} and \code{lowerDetectionLimit} are ignored.}

\item{byrow}{logical scalar indicating if \code{TRUE} to count expressing
cells per feature (i.e. gene) and if \code{FALSE} to count expressing
features (i.e. genes) per cell.}

\item{subset_row}{logical, integeror character vector indicating which rows
(i.e. features/genes) to use when calculating the number of expressed
features in each cell, when \code{byrow=FALSE}.}

\item{subset_col}{logical, integer or character vector indicating which columns
(i.e., cells) to use to calculate the number of cells expressing each gene
when \code{byrow=TRUE}.}
}
\value{
a numeric vector of the same length as the number of features if
\code{byrow} argument is \code{TRUE} and the same length as the number of
cells if \code{byrow} is \code{FALSE}
}
\description{
An efficient internal function that avoids the need to construct
'is_exprs_mat' by counting the number of expressed genes per cell on the fly.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
pd <- new("AnnotatedDataFrame", data=sc_example_cell_info)
rownames(pd) <- pd$Cell
example_sceset <- newSCESet(countData=sc_example_counts, phenoData=pd)
nexprs(example_sceset)[1:10]
nexprs(example_sceset, byrow = TRUE)[1:10]

}

