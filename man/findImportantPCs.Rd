% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qc.R
\name{findImportantPCs}
\alias{findImportantPCs}
\title{Find most important principal components for a given variable}
\usage{
findImportantPCs(object, variable = "total_features",
  plot_type = "pcs-vs-vars", exprs_values = "exprs", ntop = 500,
  feature_set = NULL, scale_features = TRUE, theme_size = 10)
}
\arguments{
\item{object}{an SCESet object containing expression values and
experimental information. Must have been appropriately prepared.}

\item{variable}{character scalar providing a variable name (column from
\code{pData(object)}) for which to determine the most important PCs.}

\item{plot_type}{character string, indicating which type of plot to produce.
Default, \code{"pairs-pcs"} produces a pairs plot for the top 5 PCs based on
their R-squared with the variable of interest. A value of
\code{"pcs-vs-vars"} produces plots of the top PCs against the variable of
interest.}

\item{exprs_values}{which slot of the \code{assayData} in the \code{object}
should be used to define expression? Valid options are "counts" (default),
"tpm", "fpkm" and "exprs", or anything else in the object added manually by 
the user.}

\item{ntop}{numeric scalar indicating the number of most variable features to
use for the PCA. Default is \code{500}, but any \code{ntop} argument is
overrided if the \code{feature_set} argument is non-NULL.}

\item{feature_set}{character, numeric or logical vector indicating a set of
features to use for the PCA. If character, entries must all be in
\code{featureNames(object)}. If numeric, values are taken to be indices for
features. If logical, vector is used to index features and should have length
equal to \code{nrow(object)}.}

\item{scale_features}{logical, should the expression values be standardised
so that each feature has unit variance? Default is \code{TRUE}.}

\item{theme_size}{numeric scalar providing base font size for ggplot theme.}
}
\value{
a \code{\link{ggplot}} plot object
}
\description{
Find most important principal components for a given variable
}
\details{
Plot the top 5 or 6 most important PCs (depending on the 
\code{plot_type} argument for a given variable. Importance here is defined as
the R-squared value from a linear model regressing each PC onto the variable 
of interest.
}
\examples{
data("sc_example_counts")
data("sc_example_cell_info")
pd <- new("AnnotatedDataFrame", data = sc_example_cell_info)
rownames(pd) <- pd$Cell
example_sceset <- newSCESet(countData = sc_example_counts, phenoData = pd)
drop_genes <- apply(exprs(example_sceset), 1, function(x) {var(x) == 0})
example_sceset <- example_sceset[!drop_genes, ]
example_sceset <- calculateQCMetrics(example_sceset)
findImportantPCs(example_sceset, variable="total_features")

}

